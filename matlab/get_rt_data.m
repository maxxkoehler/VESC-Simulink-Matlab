function [data] = get_rt_data(device)

mc_fault_code=["FAULT_CODE_NONE", ...
    "FAULT_CODE_OVER_VOLTAGE", ...
	"FAULT_CODE_UNDER_VOLTAGE", ...
	"FAULT_CODE_DRV", ...
	"FAULT_CODE_ABS_OVER_CURRENT", ...
	"FAULT_CODE_OVER_TEMP_FET", ...
	"FAULT_CODE_OVER_TEMP_MOTOR", ...
	"FAULT_CODE_GATE_DRIVER_OVER_VOLTAGE", ...
	"FAULT_CODE_GATE_DRIVER_UNDER_VOLTAGE", ...
	"FAULT_CODE_MCU_UNDER_VOLTAGE", ...
	"FAULT_CODE_BOOTING_FROM_WATCHDOG_RESET", ...
	"FAULT_CODE_ENCODER_SPI", ...
	"FAULT_CODE_ENCODER_SINCOS_BELOW_MIN_AMPLITUDE", ...
	"FAULT_CODE_ENCODER_SINCOS_ABOVE_MAX_AMPLITUDE", ...
	"FAULT_CODE_FLASH_CORRUPTION", ...
	"FAULT_CODE_HIGH_OFFSET_CURRENT_SENSOR_1", ...
	"FAULT_CODE_HIGH_OFFSET_CURRENT_SENSOR_2", ...
	"FAULT_CODE_HIGH_OFFSET_CURRENT_SENSOR_3", ...
	"FAULT_CODE_UNBALANCED_CURRENTS", ...
	"FAULT_CODE_BRK", ...
	"FAULT_CODE_RESOLVER_LOT", ...
	"FAULT_CODE_RESOLVER_DOS", ...
	"FAULT_CODE_RESOLVER_LOS", ...
	"FAULT_CODE_FLASH_CORRUPTION_APP_CFG", ...
	"FAULT_CODE_FLASH_CORRUPTION_MC_CFG", ...
	"FAULT_CODE_ENCODER_NO_MAGNET", ...
	"FAULT_CODE_ENCODER_MAGNET_TOO_STRONG", ...
	"FAULT_CODE_PHASE_FILTER"];

write(device,[2 1 4 64 132 3],"uint8");
rt_String = uint32(read(device,79,"uint8"));
flush(device);

data.tempMosfet          = single(typecast(uint16(bitshift(rt_String(4),8)+rt_String(5)),'int16')); % 4 & 5
data.tempMosfet          = tempMosfet(1)/10;
data.tempMotor           = single(typecast(uint16(bitshift(rt_String(6),8)+rt_String(7)),'int16')); % 6 & 7
data.tempMotor           = tempMotor(1)/10;
data.avgMotorCurrent     = single(typecast(uint32(bitshift(rt_String(8),24)+bitshift(rt_String(9),16)+bitshift(rt_String(10),8)+rt_String(11)),'int32')); % 8,9,10 & 11
data.avgMotorCurrent     = avgMotorCurrent(1)/100;
data.avgInputCurrent     = single(typecast(uint32(bitshift(rt_String(12),24)+bitshift(rt_String(13),16)+bitshift(rt_String(14),8)+rt_String(15)),'int32')); % 12,13,14 & 15
data.avgInputCurrent     = avgInputCurrent(1)/100;
data.avg_id              = single(typecast(bitshift(rt_String(16),24)+bitshift(rt_String(17),16)+bitshift(rt_String(18),8)+rt_String(19),'int32')); % 16,17,18 & 19
data.avg_id              = avg_id(1)/100;
data.avg_iq              = single(typecast(bitshift(rt_String(20),24)+bitshift(rt_String(21),16)+bitshift(rt_String(22),8)+rt_String(23),'int32')); % 20,21,22 & 23
data.avg_iq              = avg_iq(1)/100;
data.dutyCycleNow        = single(typecast(uint16(bitshift(rt_String(24),8)+rt_String(25)),'int16')); % 24 & 25
data.dutyCycleNow        = dutyCycleNow(1)/1000;
data.rpm                 = typecast(bitshift(rt_String(26),24)+bitshift(rt_String(27),16)+bitshift(rt_String(28),8)+rt_String(29),'int32'); % 26,27,28 & 29
data.rpm                 = rpm(1);
data.inpVoltage          = single(typecast(uint16(bitshift(rt_String(30),8)+rt_String(31)),'int16')); % 30 & 31
data.inpVoltage          = inpVoltage(1)/10;
data.ampHours            = single(typecast(bitshift(rt_String(32),24)+bitshift(rt_String(33),16)+bitshift(rt_String(34),8)+rt_String(35),'int32')); % 32,33,34 & 35
data.ampHours            = ampHours(1)/10000;
data.ampHoursCharged     = single(typecast(bitshift(rt_String(36),24)+bitshift(rt_String(37),16)+bitshift(rt_String(38),8)+rt_String(39),'int32')); % 36,37,38 & 39
data.ampHoursCharged     = ampHoursCharged(1)/10000;
data.wattHours           = single(typecast(bitshift(rt_String(40),24)+bitshift(rt_String(41),16)+bitshift(rt_String(42),8)+rt_String(43),'int32')); % 40,41,42 & 43
data.wattHours           = wattHours(1)/10000;
data.wattHoursCharged    = single(typecast(bitshift(rt_String(44),24)+bitshift(rt_String(45),16)+bitshift(rt_String(46),8)+rt_String(47),'int32')); % 44,45,46 & 47
data.wattHoursCharged    = wattHoursCharged(1)/10000;
data.tachometer          = typecast(bitshift(rt_String(48),24)+bitshift(rt_String(49),16)+bitshift(rt_String(50),8)+rt_String(51),'int32'); % 48,49,50 & 51
data.tachometer          = tachometer(1);
data.tachometerAbs       = typecast(bitshift(rt_String(52),24)+bitshift(rt_String(53),16)+bitshift(rt_String(54),8)+rt_String(55),'int32'); % 52,53,54 & 55
data.tachometerAbs       = tachometerAbs(1);
data.error               = mc_fault_code(rt_String(56)+1); % 56
data.pidPos              = single(typecast(bitshift(rt_String(57),24)+bitshift(rt_String(58),16)+bitshift(rt_String(59),8)+rt_String(60),'int32')); % 57,58,59 & 60
data.pidPos              = pidPos(1)/1000000;
data.id                  = rt_String(61);


end